[CSS]

1. CSS (Cascading Style Sheets)
	HTML과 함께 웹 표준의 기본 개념.
	HTML : 웹 사이트 내용 나열
	CSS : 디자인 구성
	독립적 사용 불가. HTML에 도움을 주는 언어.

2. 스타일 형식

     *** 	선택자 { 속성명 : 속성값; 속성명: 속성값; ..... }
	
	선택자 	: Selector 라 하며, 스타일을 어디에 적용할 것인지 선택하는 방법 ( * )
	{ }       	: 스타일 적용 코드 영역
	:	: 속성명과 값의 구분자
	;	: css 속성 : 값 지정후 명령어의 종료를 나타내기위해 기입.

	주석  :  /* 내용 .... */	

3. CSS 적용 방법 3가지
	스타일 규칙들을 한데 묶어 놓은것을 '스타일 시트'라 함

	1) 외부 스타일 시트		: CSS 파일(.css)을 별도로 작업하여 연결
		<link href="css파일 경로" rel="stylesheet" type="text/css" />	      MIME Type
 	
		href : css 파일경로 지정
		rel : 링크걸린 파일과의 관계에 대한 기술
		type : 파일의 형식 기술 : text로 기술된 css 타입의 파일이다.~~~(MIME Type)

	2) 내부 스타일 시트 	: HTML 파일 주로 head 안쪽에 <style> 태그로 작업
	3) 인라인 스타일 시트 	: 태그에 속성으로 작업 
	
4. 선택자 selector

	0) HTML 네이밍해줄 수 있는 속성
		태그명
		name 속성 : form안에 input태그에 기술해서 테이터 넘기때 많이 사용.
				이름 붙이는 느낌 (css에서는 다른 속성을 더 많이 사용)
		class 속성 : 다른 태그들과 값이 같아도 된다. -> 그루핑 역할을 해줄때 사용
		id 속성 : 문서 내에서 유일한 값을 가져야함. 태그에 ID 부여 (사람=주민번호)
                                                                                                                                                                           
	1) 전체 선택자 : *
		모든 요소에 스타일 적용

		* { 속성명 : 값; ...... }
	2) 태그 선택자 : 태그명
		해당 태그에 모두 적용
	
		태그명 { 속성명 : 값; ...... }
	
	3) class 선택자 : .class속성값 : 
		특정 부분의 스타일 적용 .class 속성값이 동일한 태그들에 적용
		그룹처럼 지정해서 적용하듯이 사용.

		<h1 class="hello">......

		.hello { 속성명 : 값; ...... }

	4) id 선택자 : #아이디속성값
		특정 태그(요소)에 스타일 적용.
		id값은 문서내에서 유일해야하므로 유일한 특정 한개의 요소에만 적용할 때 사용.

		<h2 id="test"> ....
		
		#test { 속성명 : 값; .... }

	5) 여러 선택자 동시 적용
		: 쉼표를 구분자로 나열하여 적용
	
		선택자, 선택자 { ..... }

	6) 스타일 적용 우선순위
		1) 인라인스타일> id스타일 > class스타일 > 태그 스타일
		2) 코드 순서 : 나중에 기술한것이 적용

		* 스타일 상속 : 부모 태그에 적용된것은 자식태그에도 적용됨.
			ex) body 태그에 폰트 적용하면 그안에 있는 태그들도 모두 적용

	7) 연결 선택자
		- 하위 선택자 : 띄어쓰기 구분자로 선택자 나열
			상위선택자 하위선택자 { ....... }
		- 자식 선택자 : > 를 구분자로 하위 요소 전체가 아니라 바로 아래 자식요소에만 적용
			부모선택자> 자식선택자 { ........ }

			<div>	<- 부모
				<div> <- 자식
					<div></div> <- 손자쯤...
				</div>
				<div> <- 형제
				</div>
			</div>

		- 인접 형제 선택자 : + 를 구분자로 기술. 가장 가까운 형제요소.
			선택자 + 선택자 { ..... }
			(형)	(아랫동생)

		- 형제 선택자 : ~ 을 구분자로 기술. 인접과 달리 형다음에 붙는 모든 형제 요소에 적용
			선택자 ~ 선택자 { .... }
			(형)	(모든동생)


	8) 속성 선택자
		- 속성명 : 지정한 속성을 가진 요소 찾아 적용
			선택자[속성] { .... }
			p[id]

		- 속성값 : 속성명에서 나아가 속성의 값이 일치하는 요소 찾아 적용
			선택자[속성=값] { .... }
			p[class=값]

		- 속성^=값 : 특정 값으로 시작하는 속성을 가진요소
			선택자[속성^=값] { .... }
			p[class^=A]

		- 속성$=값 : 특정값으로 끝나는 속성을 가진 요소
			선택자[속성$=값] { ..... }

		-속성*=값 : 특정값을 포함하는 속성을 가진 요소
			선택자[속성*=값] { ..... }		

	
	9) 가상클래스 선택자
		: 사용자 동작에 반응하는 스타일 적용시 사용
		a 태그에서 많이 볼 수 있다.
		
		a:link 		: 기본. 방문전 링크 스타일 적용
		a:visited 		: 방문한 링크 스타일 적용
		a:hover		: 요소에 마우스 커서를 올려놓을때 스타일 적용
		a:active		: 요소가 활성화 했을때 스타일 적용 (a-> 누루고 있을때)
		a:focus		: 요소에 초점이 맞추어 졌을때 스타일 적용

	10) UI 요소 상태에 따른 가상 클래스 선택자
		: 웹 요소 상태에 따라 스타일 지정

		: enable		: 사용가능상태의 요소 (텍스트 필드)
		: disable		: 사용불가상태 요소
		: checked		: 체크된 상태의 요소 (radio, checkbox)

	11) 구조 가상 클래스 선택자
		: 웹 문서 구조를 기준으로 특정 위치에 있는 요소 찾아 스타일 적용

		: root		: HTML
		: nth-child(n)	: 앞에서부터 n번째 자식 요소
		: nth-last-child(n)	: 뒤에서부터 n번째 자식 요소
		: nth-child(odd)	: 홀수번째 자식 요소
		: nth-child(even)	: 짝수번째 자식 요소
		: first-child 	: 첫번째 자식
		: last-child	: 마지막 자식
		: not(선택자)	: 괄호안에 있는 요소를 제외한 나머지

	12) 가상 요소 선택자
		가상 클래스 = 여러 태그중 원하는 태그를 선택하기 위한 선택자
		가상요소 = 태그안 내용의 일부분만 선택해 스타일 적용
		
		::first-line		: 첫번째 줄
		::first-letter	: 첫번째 글자
		::befor		: 내용의 맨 앞
		::after		: 내용의 맨 뒤


5. 적용 스타일

	1) 폰트 변경
		font-family : 브라우저 사용자의 시스템에 설치 되어있지 않거나
				운영체제에 따라 원하는 결과가 안나올 경우가 있다.

		@font-face : 웹 폰트 사용. 웹문서 안에 글꼴 정보도 저장하여, 사용자가 접속하면
				사용자 시스템으로 글꼴 다운로드 시켜 적용
		font-size	  : 글자 크기 지정 : px | em | rem | ex | pt 단위로 지정가능
		font-weight : 글자 굵기 지정 : normal | bold | border | lighter
					100 | 200 | 400 .... ( 400이 normal )
		font-style : normal | italic | oblique


	* CSS 크기단위
		px	: 화소 단위, 해상도에 따라 상대적인 크기를 가짐
		%	: 백분율, 지정한 사이즈를 기반으로 상대적인 비율의 크기를 가짐
		em	: 배수 단위, 지정 사이즈를 기반으로 베수로 계산된 크기를 가짐.
			16px -> 2em 32px : 중첩태그의 경우 바로 상위 태그의 값을 기준으로
			배수가 되어 주의가 필요함.
		rem	: root em 으로, 최상위 요소 사이즈를 기준으로 함. 배수 단위
			16px -> 1rem= 16px, 2rem = 32px, 1.5rem=24px
	* CSS 색상 표현 단위
		1) 색상이름 표기 : www.w3schools.com/colors/colors_names.asp 참고
		2) 16진수 표기 : #FFFFFF 같이 표기 -> #FFF 단축	       ,#AA55BB -> #A5B
			# 8A (R) 2B (G)  E2 (B) 각자리 16진수
		3) RGB 표기 : rgb(120, 43, 68)
		4) RGBA 표기 : rgba(120, 44, 67, 0.5) red green blue alpha(투명도, 1.0 불투명)
				투명도 지정 속성 opacity : CSS 제공 속성. 상속함
				rgba는 상속안함

	2) 텍스트 스타일
		color		: 글자색 지정. 색상명 | RGB(0,255,0) | #00F
		text-decoration	: 텍스트의 줄 표시 지정. none | underline | overline | line-through

	3) 문단 스타일
		text-align		: 텍스트 정렬 left | right | center | justify...
	
	4) 목록과 링크 스타일
		list-style-type	: 목록의 불릿과 번호 스타일 지정
				none | disc | circle | square 
				none | 1 | a | A .....
	5) 색상과 배경
		background-color		: 배경색 지정
		background-imahge	: 배경이미지 url('이미지파일경로') 로 이미지 지정
		background-attachment 	: 배경이미지 고정. scroll(default) | fixed
		*background		: 속성값 나열하여 한번에 적용

6. 박스 모델
	1) 블록 레벨 : 요소 하나가 혼자 한줄 다 차지하는 요소. 박스형태
		p, h, ul, ol, div, form, table 등
	2) 인라인 레벨 : 혼자 한줄 차지하지 않는 요소
		img, br, span, input, textarea, button 등

	3) display : 화면 배치 방법 결정
		none 	: 화면에 표시 하지 않음
		block	: 블록레벨로 지정
		inline	: 인라인레벨로 지정. 한줄로 배치 가능한데, 너비나 높이, 마진 같은 
			박스모델값이 정확히 적용 안될 수 있다.
		inline-block : 인라인 레벨요소이면서 블럭레벨속성을 갖도록 지정하는 것

	4) border : 테두리
		border-width, border-color 등 속성이 분리 적용하게 있다.
		간단하게는 border : 두께 스타일 색상 -> border : { 1px solid red ;} 
		와 같이 한번에 적용 가능하다.
		그 외 border-top/-left/-right/-bottom, border-top-left-radius

	5) 여백 
		margin	: 요소의 바깥 여백
			값1개 :상하좌우 모두 같은값으로 , 값 2개 상하 좌우, 값4개 상우하좌 
		padding 	: 컨텐츠와 테두리 사이 여백. margin 과 적용방법 같음
 

	배치에 도움되는 API : BootStrap